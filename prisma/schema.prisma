// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Author {
  id          Int                    @id @default(autoincrement())
  name        String                  @db.VarChar(255)
  stories     Story[]
}

model Explicit {
  id          Int                    @id @default(autoincrement())
  type        String                  @db.VarChar(20)
  identities  Identity[]
}

model Gender {
 id          Int                    @id @default(autoincrement())
 gender       String                @db.VarChar(20)
 identities   Identity[]
}

model Genre {
  id          Int                    @id @default(autoincrement())
  genre       String                @db.VarChar(30)
  stories       GenreStory[]
}

model GenreStory {
  genre       Genre                 @relation(fields: [genreId], references: [id])
  genreId     Int
  story       Story                 @relation(fields: [storyId], references: [id])
  storyId     Int
  @@id([genreId, storyId])
}

model Identity {
  id          Int                    @id @default(autoincrement())
  romantic    Romantic              @relation(fields: [romanticId], references: [id])
  romanticId  Int
  sexuality   Sexuality              @relation(fields: [sexualityId], references: [id])
  sexualityId Int
  gender      Gender                @relation(fields: [genderId], references: [id])
  genderId    Int
  explicit    Explicit              @relation(fields: [explicitId], references: [id])
  explicitId  Int
  prominance  Prominance            @relation(fields: [prominanceId], references: [id])
  prominanceId  Int
  stories     IdentityStory[]
}

model IdentityStory {
  identity        Identity          @relation(fields: [identityId], references: [id])
  identityId      Int
  story           Story             @relation(fields: [storyId], references: [id])
  storyId         Int
  @@id([identityId, storyId])
}

model Intersectionality {
  id          Int                    @id @default(autoincrement())
  intersectionality  String          @db.VarChar(50)
  stories           IntersectionalityStory[]
}

model IntersectionalityStory {
  intersectionality         Intersectionality     @relation(fields: [intersectionalityId], references: [id])
  intersectionalityId       Int
  story                     Story                 @relation(fields: [storyId], references: [id])
  storyId                   Int
  @@id([intersectionalityId, storyId])
}

model Length {
  id          Int                    @id @default(autoincrement())
  length      String                  @db.VarChar(20)
  shortLength String                  @db.VarChar(3)
  stories     Story[]
}

model Prominance {
  id          Int                    @id @default(autoincrement())
  prominance  String                  @db.VarChar(10)
  identities  Identity[]
}

model Romantic {
  id          Int                    @id @default(autoincrement())
  romantic    String                  @db.VarChar(20)
  identities  Identity[]
}

model Series {
  id          Int                    @id @default(autoincrement())
  series      String                  @db.VarChar(100)
  storygraph  String                  @db.VarChar(255)
  goodreads   String                  @db.VarChar(255)
  author      String                  @db.VarChar(255)
  stories     Story[]
}

model Sexuality {
  id          Int                    @id @default(autoincrement())
  sexuality   String                  @db.VarChar(20)
  identities  Identity[]
}

model Source {
  id          Int                    @id @default(autoincrement())
  source      String                  @db.VarChar(100)
  storygraph  String                  @db.VarChar(255)
  goodreads   String                  @db.VarChar(255)
  author      String                  @db.VarChar(255)
  stories     SourceStory[]
}

model SourceStory {
  source      Source                @relation(fields: [sourceId], references: [id])
  sourceId    Int   
  storygraph  Story                 @relation(fields: [storyId], references: [id])       
  storyId     Int
  @@id([sourceId, storyId])
}

model Story {
  id          Int                    @id @default(autoincrement())
  title       String                  @db.VarChar(255)
  author      Author                  @relation(fields: [authorId], references: [id])
  authorId    Int
  source      SourceStory[]  
  genres      GenreStory[]                 
  intersectionalities IntersectionalityStory[] 
  link        String?                   @db.VarChar(255)
  identities  IdentityStory[]  
  description String
  intersectionalityDetail String?       @db.VarChar(255)
  warnings     WarningStory[]              
  series      Series?                   @relation(fields: [seriesId], references: [id])
  seriesId    Int?
  length      Length?                   @relation(fields: [lengthId], references: [id])
  lengthId    Int?
}

model Warning {
  id          Int                    @id @default(autoincrement())
  warning   String                  @db.VarChar(30)
  stories     WarningStory[]
}

model WarningStory {
  warning     Warning                   @relation(fields: [warningId], references: [id])
  warningId   Int
  story       Story                     @relation(fields: [storyId], references: [id])
  storyId     Int
  @@id([warningId, storyId])
}